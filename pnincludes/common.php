<?php
/**
 * EZComments
 *
 * @copyright (C) EZComments Development Team
 * @link http://code.zikula.org/ezcomments
 * @version $Id$
 * @license See license.txt
 */

/**
 * process multiple comments
 *
 * This function process the comments selected in the admin view page.
 * Multiple comments may have thier state changed or be deleted
 *
 * @author The EZComments Development Team
 * @param Comments   the ids of the items to be deleted
 * @param confirmation  confirmation that this item can be deleted
 * @param redirect the location to redirect to after the deletion attempt
 * @return bool true on sucess, false on failure
 */
function ezc_processSelected($args)
{
    // Get parameters from whatever input we need.
    list ($comments, $action) = FormUtil::getPassedValue('comments', 'action');

    // extract any input passed directly to the function
    extract($args);
    $dom = ZLanguage::getModuleDomain('EZComments');
    // get the type of function call: admin or user
    $type = FormUtil::getPassedValue('type', 'user');
    if (($type != "admin") && ($type != "user"))
        $type = "user";

    // If we get here it means that the user has confirmed the action
    // Confirm authorisation code.
    if (!SecurityUtil::confirmAuthKey()) {
        return LogUtil::registerAuthidError(pnModURL('EZComments', 'admin', 'main'));
    }

    // loop round each comment deleted them in turn
    foreach ($comments as $comment) {
        switch (strtolower($action)) {
            case 'delete':
                // The API function is called.
                if (pnModAPIFunc('EZComments', 'admin', 'delete', array('id' => $comment))) {
                    // Success
                    LogUtil::registerStatus(__('Done! Item deleted.', $dom));
                }
                break;
            case 'approve':
                if (pnModAPIFunc('EZComments', 'admin', 'updatestatus', array('id' => $comment, 'status' => 0))) {
                    // Success
                    LogUtil::registerStatus(__('Done! Item updated.', $dom));
                }
                break;
            case 'hold':
                if (pnModAPIFunc('EZComments', 'admin', 'updatestatus', array('id' => $comment, 'status' => 1))) {
                    // Success
                    LogUtil::registerStatus(__('Done! Item updated.', $dom));
                }
                break;
            case 'reject':
                if (pnModAPIFunc('EZComments', 'admin', 'updatestatus', array('id' => $comment, 'status' => 2))) {
                    // Success
                    LogUtil::registerStatus(__('Done! Item updated.', $dom));
                }
                break;
        }
    }

    // This function generated no output, and so now it is complete we redirect
    // the user to an appropriate page for them to carry on their work
    if (!empty($redirect)) {
        return pnRedirect($redirect);
    } else {
        if ($type == "user")
            return pnRedirect(pnModURL('EZComments', 'user', 'main'));
        else
            return pnRedirect(pnModURL('EZComments', 'admin', 'main'));
    }
}

/**
 * modify a comment
 *
 * This is a standard function that is called whenever an administrator
 * wishes to modify a comment
 *
 * @author The EZComments Development Team
 * @param tid the id of the comment to be modified
 * @return string the modification page
 */
function ezc_modify($args)
{
    // get the type of function call: admin or user
    $type = FormUtil::getPassedValue('type', 'user');
    if (($type != "admin") && ($type != "user"))
        $type = "user";

    // get our input
    $id = FormUtil::getPassedValue('id', isset($args['id']) ? $args['id'] : null, 'GETPOST');

    // Security check
    $securityCheck = pnModAPIFunc('EZComments', 'user', 'checkPermission', array('module' => '', 'objectid' => '', 'commentid' => $id, 'level' => ACCESS_EDIT));
    if (!$securityCheck) {
        $redirect = base64_decode(FormUtil::getPassedValue('redirect'));
        if (!isset($redirect))
            $redirect = 'index.php';
        return LogUtil::registerPermissionError($redirect);
    }

    // load edithandler class from file
    if ($type == "user")
        Loader::requireOnce('modules/EZComments/pnincludes/ezcomments_user_modifyhandler.class.php');
    else
        Loader::requireOnce('modules/EZComments/pnincludes/ezcomments_admin_modifyhandler.class.php');

    // Create pnForm output object
    $pnf = FormUtil::newpnForm('EZComments');

    // Return the output that has been generated by this function
    if ($type == "user")
        return $pnf->pnFormExecute('ezcomments_user_modify.htm', new EZComments_user_modifyhandler());
    else
        return $pnf->pnFormExecute('ezcomments_admin_modify.htm', new EZComments_admin_modifyhandler());
}
